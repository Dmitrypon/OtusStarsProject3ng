syntax = "proto3";

service UserManager {
  /**
   * Возвращает user в соответвии с переденным идентификатором
   * Возвращает gRPC статус `NOT_FOUND`, если user не найден
   */
  rpc GetUserById (GetUserByIdRequest) returns (UserResponse);
  /**
   * Метод создания нового user
   */
  rpc CreateUser (CreateUserRequest) returns (UserResponse);
  /**
   * Изменяет user в соответвии с request
   * Возвращает gRPC статус `NOT_FOUND`, если user не найден
   */
  rpc UpdateUser (UpdateUserRequest) returns (UserResponse);
  /**
   * Удаляет user
   * Возвращает gRPC статус `NOT_FOUND`, если user не найден
   */
  rpc DeleteUser (DeleteUserRequest) returns (DeleteUserResponse);
}

message GetUserByIdRequest {
    string id = 1;
}

message CreateUserRequest {
    string login = 1;
    string password_hash = 2;
    string first_name = 3;
    string last_name = 4;
    string role_id = 5;
    int64 phone = 6;
    string address = 7;
}

message UpdateUserRequest {
    string id = 1;
    string first_name = 2;
    string last_name = 3;
    string address = 4;
    int64 phone = 5;
}

message DeleteUserRequest {
    string id = 1;
}

message UserResponse {
    string guid = 1;
    string login = 2;
    string first_name = 3;
    string last_name = 4;
    string role_name = 5;
    int64 phone = 6;
    string address = 7;
    string created_at = 8;
}

message DeleteUserResponse {
    bool success = 1;
}